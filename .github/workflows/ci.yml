name: PHP Code Quality

on:
  pull_request:

jobs:
  # phpcbf:
  #   name: PHPCBF Fix
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Composer Update
  #       run: |
  #         composer update

  #     - name: Install PHPCS
  #       run: composer require --dev squizlabs/php_codesniffer

  #     - name: Get modified files and lines
  #       id: changes
  #       uses: tj-actions/changed-files@v42

  #     - name: Fix PHPCBF issues on modified lines
  #       run: |
  #         echo "${{ steps.changes.outputs.modified_files }}" | xargs -I {} sh -c "vendor/bin/phpcbf --standard=WordPress --extensions=php --ignore=*/vendor/* --runtime-set testVersion 5.6- {}"

  # phpcs:
  #   name: PHPCS Check
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Composer Update
  #       run: |
  #         composer update

  #     - name: Install PHPCS
  #       run: composer require --dev squizlabs/php_codesniffer

  #     - name: Get modified files and lines
  #       id: changed_lines
  #       uses: hestonhoffman/changed-lines@v1

  #     - name: Check PHPCS issues on modified lines
  #       run: |
  #         echo "${{ steps.changed_lines.outputs.changed_lines }}" | jq -r 'to_entries[] | "vendor/bin/phpcs --standard=WordPress --extensions=php --ignore=*/vendor/* --runtime-set testVersion 5.6- \(.key) --line-range \(.value | join(","))"'

  phpcs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Composer Update
        run: |
          composer update

      - name: Install PHPCS
        run: composer require --dev squizlabs/php_codesniffer

      - name: Get modified files and lines
        id: changes
        run: |
          MODIFIED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.php$' || true)
          if [ -n "${MODIFIED_FILES}" ]; then
            echo "::set-output name=modified_files::${MODIFIED_FILES}"
          else
            echo "No modified PHP files found."
            exit 0
          fi

      - name: Check PHPCS issues on modified lines
        run: |
          echo "${{ steps.changes.outputs.modified_files }}" | xargs -I {} sh -c "vendor/bin/phpcs --standard=WordPress --extensions=php --ignore=*/vendor/* --runtime-set testVersion 5.6- {}"
